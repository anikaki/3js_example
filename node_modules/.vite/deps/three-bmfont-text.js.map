{
  "version": 3,
  "sources": ["../../word-wrapper/index.js", "../../xtend/immutable.js", "../../as-number/index.js", "../../layout-bmfont-text/index.js", "../../inherits/inherits_browser.js", "../../dtype/index.js", "../../an-array/index.js", "../../is-buffer/index.js", "../../quad-indices/index.js", "../../three-bmfont-text/lib/vertices.js", "../../three-bmfont-text/lib/utils.js", "../../three-bmfont-text/index.js"],
  "sourcesContent": ["var newline = /\\n/\nvar newlineChar = '\\n'\nvar whitespace = /\\s/\n\nmodule.exports = function(text, opt) {\n    var lines = module.exports.lines(text, opt)\n    return lines.map(function(line) {\n        return text.substring(line.start, line.end)\n    }).join('\\n')\n}\n\nmodule.exports.lines = function wordwrap(text, opt) {\n    opt = opt||{}\n\n    //zero width results in nothing visible\n    if (opt.width === 0 && opt.mode !== 'nowrap') \n        return []\n\n    text = text||''\n    var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE\n    var start = Math.max(0, opt.start||0)\n    var end = typeof opt.end === 'number' ? opt.end : text.length\n    var mode = opt.mode\n\n    var measure = opt.measure || monospace\n    if (mode === 'pre')\n        return pre(measure, text, start, end, width)\n    else\n        return greedy(measure, text, start, end, width, mode)\n}\n\nfunction idxOf(text, chr, start, end) {\n    var idx = text.indexOf(chr, start)\n    if (idx === -1 || idx > end)\n        return end\n    return idx\n}\n\nfunction isWhitespace(chr) {\n    return whitespace.test(chr)\n}\n\nfunction pre(measure, text, start, end, width) {\n    var lines = []\n    var lineStart = start\n    for (var i=start; i<end && i<text.length; i++) {\n        var chr = text.charAt(i)\n        var isNewline = newline.test(chr)\n\n        //If we've reached a newline, then step down a line\n        //Or if we've reached the EOF\n        if (isNewline || i===end-1) {\n            var lineEnd = isNewline ? i : i+1\n            var measured = measure(text, lineStart, lineEnd, width)\n            lines.push(measured)\n            \n            lineStart = i+1\n        }\n    }\n    return lines\n}\n\nfunction greedy(measure, text, start, end, width, mode) {\n    //A greedy word wrapper based on LibGDX algorithm\n    //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n    var lines = []\n\n    var testWidth = width\n    //if 'nowrap' is specified, we only wrap on newline chars\n    if (mode === 'nowrap')\n        testWidth = Number.MAX_VALUE\n\n    while (start < end && start < text.length) {\n        //get next newline position\n        var newLine = idxOf(text, newlineChar, start, end)\n\n        //eat whitespace at start of line\n        while (start < newLine) {\n            if (!isWhitespace( text.charAt(start) ))\n                break\n            start++\n        }\n\n        //determine visible # of glyphs for the available width\n        var measured = measure(text, start, newLine, testWidth)\n\n        var lineEnd = start + (measured.end-measured.start)\n        var nextStart = lineEnd + newlineChar.length\n\n        //if we had to cut the line before the next newline...\n        if (lineEnd < newLine) {\n            //find char to break on\n            while (lineEnd > start) {\n                if (isWhitespace(text.charAt(lineEnd)))\n                    break\n                lineEnd--\n            }\n            if (lineEnd === start) {\n                if (nextStart > start + newlineChar.length) nextStart--\n                lineEnd = nextStart // If no characters to break, show all.\n            } else {\n                nextStart = lineEnd\n                //eat whitespace at end of line\n                while (lineEnd > start) {\n                    if (!isWhitespace(text.charAt(lineEnd - newlineChar.length)))\n                        break\n                    lineEnd--\n                }\n            }\n        }\n        if (lineEnd >= start) {\n            var result = measure(text, start, lineEnd, testWidth)\n            lines.push(result)\n        }\n        start = nextStart\n    }\n    return lines\n}\n\n//determines the visible number of glyphs within a given width\nfunction monospace(text, start, end, width) {\n    var glyphs = Math.min(width, end-start)\n    return {\n        start: start,\n        end: start+glyphs\n    }\n}", "module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n", "module.exports = function numtype(num, def) {\n\treturn typeof num === 'number'\n\t\t? num \n\t\t: (typeof def === 'number' ? def : 0)\n}", "var wordWrap = require('word-wrapper')\nvar xtend = require('xtend')\nvar number = require('as-number')\n\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\nvar M_WIDTHS = ['m', 'w']\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\n\nvar TAB_ID = '\\t'.charCodeAt(0)\nvar SPACE_ID = ' '.charCodeAt(0)\nvar ALIGN_LEFT = 0, \n    ALIGN_CENTER = 1, \n    ALIGN_RIGHT = 2\n\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt)\n}\n\nfunction TextLayout(opt) {\n  this.glyphs = []\n  this._measure = this.computeMetrics.bind(this)\n  this.update(opt)\n}\n\nTextLayout.prototype.update = function(opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt)\n  this._opt = opt\n  this._opt.tabSize = number(this._opt.tabSize, 4)\n\n  if (!opt.font)\n    throw new Error('must provide a valid bitmap font')\n\n  var glyphs = this.glyphs\n  var text = opt.text||'' \n  var font = opt.font\n  this._setupSpaceGlyphs(font)\n  \n  var lines = wordWrap.lines(text, opt)\n  var minWidth = opt.width || 0\n\n  //clear glyphs\n  glyphs.length = 0\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function(prev, line) {\n    return Math.max(prev, line.width, minWidth)\n  }, 0)\n\n  //the pen position\n  var x = 0\n  var y = 0\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n  var baseline = font.common.base\n  var descender = lineHeight-baseline\n  var letterSpacing = opt.letterSpacing || 0\n  var height = lineHeight * lines.length - descender\n  var align = getAlignType(this._opt.align)\n\n  //draw text along baseline\n  y -= height\n  \n  //the metrics for this text layout\n  this._width = maxLineWidth\n  this._height = height\n  this._descender = lineHeight - baseline\n  this._baseline = baseline\n  this._xHeight = getXHeight(font)\n  this._capHeight = getCapHeight(font)\n  this._lineHeight = lineHeight\n  this._ascender = lineHeight - descender - this._xHeight\n    \n  //layout each glyph\n  var self = this\n  lines.forEach(function(line, lineIndex) {\n    var start = line.start\n    var end = line.end\n    var lineWidth = line.width\n    var lastGlyph\n    \n    //for each glyph in that line...\n    for (var i=start; i<end; i++) {\n      var id = text.charCodeAt(i)\n      var glyph = self.getGlyph(font, id)\n      if (glyph) {\n        if (lastGlyph) \n          x += getKerning(font, lastGlyph.id, glyph.id)\n\n        var tx = x\n        if (align === ALIGN_CENTER) \n          tx += (maxLineWidth-lineWidth)/2\n        else if (align === ALIGN_RIGHT)\n          tx += (maxLineWidth-lineWidth)\n\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        })  \n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing\n        lastGlyph = glyph\n      }\n    }\n\n    //next line down\n    y += lineHeight\n    x = 0\n  })\n  this._linesTotal = lines.length;\n}\n\nTextLayout.prototype._setupSpaceGlyphs = function(font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null\n  this._fallbackTabGlyph = null\n\n  if (!font.chars || font.chars.length === 0)\n    return\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) \n          || getMGlyph(font) \n          || font.chars[0]\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance\n  this._fallbackSpaceGlyph = space\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n    xoffset: 0, yoffset: 0, width: 0, height: 0\n  })\n}\n\nTextLayout.prototype.getGlyph = function(font, id) {\n  var glyph = getGlyphById(font, id)\n  if (glyph)\n    return glyph\n  else if (id === TAB_ID) \n    return this._fallbackTabGlyph\n  else if (id === SPACE_ID) \n    return this._fallbackSpaceGlyph\n  return null\n}\n\nTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0\n  var font = this._opt.font\n  var curPen = 0\n  var curWidth = 0\n  var count = 0\n  var glyph\n  var lastGlyph\n\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    }\n  }\n\n  end = Math.min(text.length, end)\n  for (var i=start; i < end; i++) {\n    var id = text.charCodeAt(i)\n    var glyph = this.getGlyph(font, id)\n\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n      curPen += kern\n\n      var nextPen = curPen + glyph.xadvance + letterSpacing\n      var nextWidth = curPen + glyph.width\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width)\n        break\n\n      //otherwise continue along our line\n      curPen = nextPen\n      curWidth = nextWidth\n      lastGlyph = glyph\n    }\n    count++\n  }\n  \n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph)\n    curWidth += lastGlyph.xoffset\n\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  }\n}\n\n//getters for the private vars\n;['width', 'height', \n  'descender', 'ascender',\n  'xHeight', 'baseline',\n  'capHeight',\n  'lineHeight' ].forEach(addGetter)\n\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  })\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return (new Function([\n    'return function '+name+'() {',\n    '  return this._'+name,\n    '}'\n  ].join('\\n')))()\n}\n\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0)\n    return null\n\n  var glyphIdx = findChar(font.chars, id)\n  if (glyphIdx >= 0)\n    return font.chars[glyphIdx]\n  return null\n}\n\nfunction getXHeight(font) {\n  for (var i=0; i<X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getMGlyph(font) {\n  for (var i=0; i<M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx]\n  }\n  return 0\n}\n\nfunction getCapHeight(font) {\n  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0)\n    return 0\n\n  var table = font.kernings\n  for (var i=0; i<table.length; i++) {\n    var kern = table[i]\n    if (kern.first === left && kern.second === right)\n      return kern.amount\n  }\n  return 0\n}\n\nfunction getAlignType(align) {\n  if (align === 'center')\n    return ALIGN_CENTER\n  else if (align === 'right')\n    return ALIGN_RIGHT\n  return ALIGN_LEFT\n}\n\nfunction findChar (array, value, start) {\n  start = start || 0\n  for (var i = start; i < array.length; i++) {\n    if (array[i].id === value) {\n      return i\n    }\n  }\n  return -1\n}", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n", "var str = Object.prototype.toString\n\nmodule.exports = anArray\n\nfunction anArray(arr) {\n  return (\n       arr.BYTES_PER_ELEMENT\n    && str.call(arr.buffer) === '[object ArrayBuffer]'\n    || Array.isArray(arr)\n  )\n}\n", "/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n", "var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}", "module.exports.pages = function pages (glyphs) {\n  var pages = new Float32Array(glyphs.length * 4 * 1)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var id = glyph.data.page || 0\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n  })\n  return pages\n}\n\nmodule.exports.uvs = function uvs (glyphs, texWidth, texHeight, flipY) {\n  var uvs = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n    var bw = (bitmap.x + bitmap.width)\n    var bh = (bitmap.y + bitmap.height)\n\n    // top left position\n    var u0 = bitmap.x / texWidth\n    var v1 = bitmap.y / texHeight\n    var u1 = bw / texWidth\n    var v0 = bh / texHeight\n\n    if (flipY) {\n      v1 = (texHeight - bitmap.y) / texHeight\n      v0 = (texHeight - bh) / texHeight\n    }\n\n    // BL\n    uvs[i++] = u0\n    uvs[i++] = v1\n    // TL\n    uvs[i++] = u0\n    uvs[i++] = v0\n    // TR\n    uvs[i++] = u1\n    uvs[i++] = v0\n    // BR\n    uvs[i++] = u1\n    uvs[i++] = v1\n  })\n  return uvs\n}\n\nmodule.exports.positions = function positions (glyphs) {\n  var positions = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n\n    // bottom left position\n    var x = glyph.position[0] + bitmap.xoffset\n    var y = glyph.position[1] + bitmap.yoffset\n\n    // quad size\n    var w = bitmap.width\n    var h = bitmap.height\n\n    // BL\n    positions[i++] = x\n    positions[i++] = y\n    // TL\n    positions[i++] = x\n    positions[i++] = y + h\n    // TR\n    positions[i++] = x + w\n    positions[i++] = y + h\n    // BR\n    positions[i++] = x + w\n    positions[i++] = y\n  })\n  return positions\n}\n", "var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n", "var createLayout = require('layout-bmfont-text')\nvar inherits = require('inherits')\nvar createIndices = require('quad-indices')\n\nvar vertices = require('./lib/vertices')\nvar utils = require('./lib/utils')\n\nvar Base = THREE.BufferGeometry\n\nmodule.exports = function createTextGeometry (opt) {\n  return new TextGeometry(opt)\n}\n\nfunction TextGeometry (opt) {\n  Base.call(this)\n\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use these as default values for any subsequent\n  // calls to update()\n  this._opt = Object.assign({}, opt)\n\n  // also do an initial setup...\n  if (opt) this.update(opt)\n}\n\ninherits(TextGeometry, Base)\n\nTextGeometry.prototype.update = function (opt) {\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use constructor defaults\n  opt = Object.assign({}, this._opt, opt)\n\n  if (!opt.font) {\n    throw new TypeError('must specify a { font } in options')\n  }\n\n  this.layout = createLayout(opt)\n\n  // get vec2 texcoords\n  var flipY = opt.flipY !== false\n\n  // the desired BMFont data\n  var font = opt.font\n\n  // determine texture size from font file\n  var texWidth = font.common.scaleW\n  var texHeight = font.common.scaleH\n\n  // get visible glyphs\n  var glyphs = this.layout.glyphs.filter(function (glyph) {\n    var bitmap = glyph.data\n    return bitmap.width * bitmap.height > 0\n  })\n\n  // provide visible glyphs for convenience\n  this.visibleGlyphs = glyphs\n\n  // get common vertex data\n  var positions = vertices.positions(glyphs)\n  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n  var indices = createIndices([], {\n    clockwise: true,\n    type: 'uint16',\n    count: glyphs.length\n  })\n\n  // update vertex data\n  this.setIndex(indices)\n  this.setAttribute('position', new THREE.BufferAttribute(positions, 2))\n  this.setAttribute('uv', new THREE.BufferAttribute(uvs, 2))\n\n  // update multipage data\n  if (!opt.multipage && 'page' in this.attributes) {\n    // disable multipage rendering\n    this.removeAttribute('page')\n  } else if (opt.multipage) {\n    // enable multipage rendering\n    var pages = vertices.pages(glyphs)\n    this.setAttribute('page', new THREE.BufferAttribute(pages, 1))\n  }\n}\n\nTextGeometry.prototype.computeBoundingSphere = function () {\n  if (this.boundingSphere === null) {\n    this.boundingSphere = new THREE.Sphere()\n  }\n\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    this.boundingSphere.radius = 0\n    this.boundingSphere.center.set(0, 0, 0)\n    return\n  }\n  utils.computeSphere(positions, this.boundingSphere)\n  if (isNaN(this.boundingSphere.radius)) {\n    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n      'Computed radius is NaN. The ' +\n      '\"position\" attribute is likely to have NaN values.')\n  }\n}\n\nTextGeometry.prototype.computeBoundingBox = function () {\n  if (this.boundingBox === null) {\n    this.boundingBox = new THREE.Box3()\n  }\n\n  var bbox = this.boundingBox\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    bbox.makeEmpty()\n    return\n  }\n  utils.computeBox(positions, bbox)\n}\n"],
  "mappings": "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",
  "names": ["pages", "uvs", "positions"]
}
